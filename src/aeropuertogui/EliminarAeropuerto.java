
package aeropuertogui;
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
/**
 *
 * @author RYZEN
 */
public class EliminarAeropuerto extends javax.swing.JFrame {

    /**
     * Creates new form EliminarAeropuerto
     */
    public EliminarAeropuerto() {
        initComponents();
        llenarCB();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        labelBorrarAeropuerto = new javax.swing.JLabel();
        labelSeleccionarAeropuerto = new javax.swing.JLabel();
        btnEliminarAeropuerto = new javax.swing.JButton();
        cbSeleccionarAeropuerto = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        labelBorrarAeropuerto.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        labelBorrarAeropuerto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelBorrarAeropuerto.setText("Borrar Aeropuerto");

        labelSeleccionarAeropuerto.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        labelSeleccionarAeropuerto.setText("Seleccionar Aeropuerto: ");

        btnEliminarAeropuerto.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnEliminarAeropuerto.setText("Eliminar");
        btnEliminarAeropuerto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarAeropuertoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(labelBorrarAeropuerto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addComponent(labelSeleccionarAeropuerto)
                .addGap(33, 33, 33)
                .addComponent(cbSeleccionarAeropuerto, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(115, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnEliminarAeropuerto)
                .addGap(251, 251, 251))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(labelBorrarAeropuerto)
                .addGap(70, 70, 70)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelSeleccionarAeropuerto)
                    .addComponent(cbSeleccionarAeropuerto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(57, 57, 57)
                .addComponent(btnEliminarAeropuerto)
                .addContainerGap(59, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnEliminarAeropuertoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarAeropuertoActionPerformed
        eliminarAeropuerto();
    }//GEN-LAST:event_btnEliminarAeropuertoActionPerformed
    
    private void llenarCB() {
        try(var manager = new DBManager()) {
            cbSeleccionarAeropuerto.removeAllItems();
            List<String> aeropuertos = manager.obtenerListaAeropuertos();
            
            for (String aeropuerto : aeropuertos) {
            cbSeleccionarAeropuerto.addItem(aeropuerto);
        }
        } catch (SQLException ex) {
            ex.printStackTrace();
            System.out.println("Excepci贸n SQL: " + ex.getMessage());
            System.out.println("Estado SQL: " + ex.getSQLState());
            System.out.println("C贸digo de error: " + ex.getErrorCode());
        }  
    }

    public void eliminarAeropuerto(){
        try(var manager = new DBManager()) {
            Object itemSeleccionado =cbSeleccionarAeropuerto.getSelectedItem();
            if (itemSeleccionado != null){
              boolean resp = manager.eliminarAeropuerto(itemSeleccionado.toString());
                if (resp) {
                    JOptionPane.showMessageDialog(this,"Aeropuerto eliminado Correctamente");
                    llenarCB();
            }   else {
                    JOptionPane.showMessageDialog(this,"Error al eliminar Aeropuerto","Error",JOptionPane.ERROR_MESSAGE);
                               
            } 
            } else{
                JOptionPane.showMessageDialog(this,"No hay aeropuertos","Error",JOptionPane.ERROR_MESSAGE);
            }
                        
        } catch (SQLException ex) {
            ex.printStackTrace();
            System.out.println("Excepci贸n SQL: " + ex.getMessage());
            System.out.println("Estado SQL: " + ex.getSQLState());
            System.out.println("C贸digo de error: " + ex.getErrorCode());
        }
    
    }
    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEliminarAeropuerto;
    private javax.swing.JComboBox<String> cbSeleccionarAeropuerto;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel labelBorrarAeropuerto;
    private javax.swing.JLabel labelSeleccionarAeropuerto;
    // End of variables declaration//GEN-END:variables
}
