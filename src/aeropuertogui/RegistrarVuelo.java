/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package aeropuertogui;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import java.text.SimpleDateFormat;

/**
 *
 * @author RYZEN
 */
public class RegistrarVuelo extends javax.swing.JFrame {

    /**
     * Creates new form RegistrarVuelo
     */
    public RegistrarVuelo() {
        initComponents();
        llenarCB();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        labelNumeroVuelo = new javax.swing.JLabel();
        labelAerolinea = new javax.swing.JLabel();
        labelHoraSalida = new javax.swing.JLabel();
        labelDestino = new javax.swing.JLabel();
        labelCapacidadMaxima = new javax.swing.JLabel();
        labelAeropuertoPartida = new javax.swing.JLabel();
        labelAeropuertoLlegada = new javax.swing.JLabel();
        tfNumeroVuelo = new javax.swing.JTextField();
        tfAerolinea = new javax.swing.JTextField();
        sCapacidad = new javax.swing.JSpinner();
        cbAeropuertoPartida = new javax.swing.JComboBox<>();
        cbAeropuertoLlegada = new javax.swing.JComboBox<>();
        labelDestinoSeleccionado = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        sHora = new javax.swing.JSpinner();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setText("Registrar Vuelo");

        labelNumeroVuelo.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        labelNumeroVuelo.setText("Número de vuelo:");

        labelAerolinea.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        labelAerolinea.setText("Aerolinea: ");

        labelHoraSalida.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        labelHoraSalida.setText("Hora de salida: ");

        labelDestino.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        labelDestino.setText("Destino: ");

        labelCapacidadMaxima.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        labelCapacidadMaxima.setText("Capacidad máxima: ");

        labelAeropuertoPartida.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        labelAeropuertoPartida.setText("Aeropuerto de partida:");

        labelAeropuertoLlegada.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        labelAeropuertoLlegada.setText("Aeropuerto de llegada:");

        tfNumeroVuelo.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        tfAerolinea.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        sCapacidad.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        sCapacidad.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 10));

        cbAeropuertoPartida.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cbAeropuertoPartida.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbAeropuertoPartidaItemStateChanged(evt);
            }
        });

        cbAeropuertoLlegada.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cbAeropuertoLlegada.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbAeropuertoLlegadaItemStateChanged(evt);
            }
        });

        labelDestinoSeleccionado.setFont(new java.awt.Font("Segoe UI", 2, 18)); // NOI18N
        labelDestinoSeleccionado.setText("Seleccione un aeropuerto de llegada");

        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton1.setText("Registrar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        sHora.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        sHora.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(1705597200000L), null, null, java.util.Calendar.HOUR_OF_DAY));
        sHora.setEditor(new javax.swing.JSpinner.DateEditor(sHora, "HH:mm"));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(212, 212, 212)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelNumeroVuelo)
                                    .addComponent(labelAerolinea))
                                .addGap(66, 66, 66)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tfNumeroVuelo, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE)
                                    .addComponent(tfAerolinea)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelHoraSalida)
                                    .addComponent(labelCapacidadMaxima)
                                    .addComponent(labelAeropuertoPartida)
                                    .addComponent(labelAeropuertoLlegada))
                                .addGap(36, 36, 36)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(sHora, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                                        .addComponent(sCapacidad, javax.swing.GroupLayout.Alignment.LEADING))
                                    .addComponent(cbAeropuertoPartida, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cbAeropuertoLlegada, 0, 232, Short.MAX_VALUE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(labelDestino)
                                .addGap(90, 90, 90)
                                .addComponent(labelDestinoSeleccionado, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(230, 230, 230)
                        .addComponent(jButton1)))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(jLabel1)
                .addGap(66, 66, 66)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNumeroVuelo)
                    .addComponent(tfNumeroVuelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelAerolinea)
                    .addComponent(tfAerolinea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelHoraSalida)
                    .addComponent(sHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCapacidadMaxima)
                    .addComponent(sCapacidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelAeropuertoPartida)
                    .addComponent(cbAeropuertoPartida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelAeropuertoLlegada)
                    .addComponent(cbAeropuertoLlegada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelDestino)
                    .addComponent(labelDestinoSeleccionado))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 69, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(34, 34, 34))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (cbAeropuertoLlegada.getSelectedItem() != cbAeropuertoPartida.getSelectedItem()){
            if(cbAeropuertoLlegada.getSelectedItem().toString() != "Seleccionar" && cbAeropuertoPartida.getSelectedItem().toString() != "Seleccionar"){
                if (!tfNumeroVuelo.getText().equals("") && !tfAerolinea.getText().equals("")){
                    registrarVuelo();
                    tfNumeroVuelo.setText("");
                    tfAerolinea.setText("");
                } else{
                    JOptionPane.showMessageDialog(this,"Debe llenar los campos");
                }
                
            } else{
                JOptionPane.showMessageDialog(this,"Debe seleccionar dos aeropuertos");
            }
            
        } else{
            JOptionPane.showMessageDialog(this,"Debe seleccionar aeropuertos diferentes");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cbAeropuertoPartidaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbAeropuertoPartidaItemStateChanged
        
    }//GEN-LAST:event_cbAeropuertoPartidaItemStateChanged

    private void cbAeropuertoLlegadaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbAeropuertoLlegadaItemStateChanged
           String nombre = cbAeropuertoLlegada.getSelectedItem().toString();
           if (nombre != "Seleccionar"){
               List<String> aeropuerto = obtenerInfo(nombre);
               
               labelDestinoSeleccionado.setText(aeropuerto.get(2)); 
           } else {
               labelDestinoSeleccionado.setText("Seleccione un aeropuerto de llegada");
           }
           
    }//GEN-LAST:event_cbAeropuertoLlegadaItemStateChanged

    private List<String> obtenerInfo(String itemSeleccionado){
        List<String> aeropuerto = new ArrayList<>();
        try(var manager = new DBManager()){
            aeropuerto = manager.getInfoAeropuertos(itemSeleccionado);
        }catch(Exception x){
            System.out.println("Error");
        }
        return aeropuerto;
    }
    public void registrarVuelo(){
        try(var manager = new DBManager()) {
                       
            int numeroVuelo = Integer.valueOf(tfNumeroVuelo.getText());
            String aerolinea = tfAerolinea.getText();
            SimpleDateFormat sdf = new SimpleDateFormat("HH:mm");
            String horaSalida = sdf.format(sHora.getValue());

            
            int capacidadMaxima = (int) sCapacidad.getValue();
            String aeropuertoLlegada = cbAeropuertoLlegada.getSelectedItem().toString();
            String aeropuertoPartida = cbAeropuertoPartida.getSelectedItem().toString();
            
     
            

                       
            boolean resp = manager.registrarVuelo(numeroVuelo, aerolinea, horaSalida, capacidadMaxima, aeropuertoPartida, aeropuertoLlegada);
            if (resp) {
                JOptionPane.showMessageDialog(this,"Aeropuerto Agregado Correctamente");              
            } else {
                JOptionPane.showMessageDialog(this,"Error al agregar Aeropuerto","Error",JOptionPane.ERROR_MESSAGE);
                               
            }            
        } catch (SQLException ex) {
            ex.printStackTrace();
            System.out.println("Excepción SQL: " + ex.getMessage());
            System.out.println("Estado SQL: " + ex.getSQLState());
            System.out.println("Código de error: " + ex.getErrorCode());
        }  
 
       
 
    }
    private void llenarCB() {
        try(var manager = new DBManager()) {
            cbAeropuertoLlegada.removeAllItems();
            cbAeropuertoPartida.removeAllItems();
            List<String> aeropuertos = manager.obtenerListaAeropuertos();
            cbAeropuertoLlegada.addItem("Seleccionar");
            cbAeropuertoPartida.addItem("Seleccionar");
            for (String item : aeropuertos) {
            cbAeropuertoLlegada.addItem(item);
            cbAeropuertoPartida.addItem(item);
        }
        } catch (SQLException ex) {
            ex.printStackTrace();
            System.out.println("Excepción SQL: " + ex.getMessage());
            System.out.println("Estado SQL: " + ex.getSQLState());
            System.out.println("Código de error: " + ex.getErrorCode());
        }
        
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cbAeropuertoLlegada;
    private javax.swing.JComboBox<String> cbAeropuertoPartida;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel labelAerolinea;
    private javax.swing.JLabel labelAeropuertoLlegada;
    private javax.swing.JLabel labelAeropuertoPartida;
    private javax.swing.JLabel labelCapacidadMaxima;
    private javax.swing.JLabel labelDestino;
    private javax.swing.JLabel labelDestinoSeleccionado;
    private javax.swing.JLabel labelHoraSalida;
    private javax.swing.JLabel labelNumeroVuelo;
    private javax.swing.JSpinner sCapacidad;
    private javax.swing.JSpinner sHora;
    private javax.swing.JTextField tfAerolinea;
    private javax.swing.JTextField tfNumeroVuelo;
    // End of variables declaration//GEN-END:variables
}
